#cloud-config-archive
- type: "text/cloud-config"
  content: |
    users:
      - name: test
        shell: /bin/bash
        # bad idea giving root access as is
        # TODO: perform all base config that needs root access in cloud-init itself.
        sudo: "ALL=(ALL) NOPASSWD:ALL"
        ssh_authorized_keys:
          - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINTSR/ZS16JJJktLE2KOftUuYsn4qOkpGcuorf325Xuh 

    packages:
      - wireguard

# All the download stuff into boothook
# Be careful, in some cases, resolv.conf is not yet setup before running boothooks. So curl may not work.
- type: "text/cloud-boothook"
  content: |
    #!/bin/bash

    umask 022
    DNSCRPT_VER=2.1.8

    function get_arch() {
        case "$(uname -m)" in 
            x86_64|amd64)
                echo "x86_64"
                ;;
            i?86)
                echo "i386"
                ;;
            arm64)
                echo "arm64"
                ;;
            arm)
                echo "arm"
                ;;
            *)
                echo "Can't determine Architecture"
                exit 1
            esac
    }

    function download_and_setup_dnscrypt() {
        local ARCH=$(get_arch)
        local WRK_DIR="linux-${ARCH}"

        mkdir -p /opt/dnscrypt-proxy/
        pushd /opt/dnscrypt-proxy/

        TAR_FILE="dnscrypt-proxy-linux_${ARCH}-${DNSCRPT_VER}.tar.gz"
        curl -sSLO "https://github.com/DNSCrypt/dnscrypt-proxy/releases/download/${DNSCRPT_VER}/${TAR_FILE}"
        tar -xvf "$TAR_FILE"
        
        mv "${WRK_DIR}/example-dnscrypt-proxy.toml" "${WRK_DIR}/dnscrypt-proxy.toml"
        ln -rs "${WRK_DIR}/dnscrypt-proxy" /usr/bin/
        popd
    }

    # get default network device
    export DEFAULT_INTERFACE=$(ip route get 9.9.9.9 | awk '{print $5}')

    # Setup firewall, toggle the nftables service later
    # This won't work for redhat variants. For redhat, place this in /etc/sysconfig/nftables.conf or /etc/nftables/main.nft
    curl -sSL https://raw.githubusercontent.com/gurramsanjaya/basic-vm-setup/refs/heads/main/vars/nftables.conf | envsubst '$DEFAULT_INTERFACE' > /etc/nftables.conf
    nft -f /etc/nftables.conf

    # Basic dnscrpt-proxy setup. Change the toml/service later
    download_and_setup_dnscrypt

# All the services stuff here
- type: "text/x-shellscript"
  content: |
    #!/bin/bash

    function disable_systemd_resolved() {
      # TODO: Need to make this atomic using traps
      systemctl disable --now systemd-resolved.service
      cat > /etc/resolv.conf << EOF
    nameserver 127.0.0.1
    options edns0 trust-ad
    search .
    EOF
    }
      
    systemctl enable --now nftables.service
    
    disable_systemd_resolved
    dnscrypt-proxy -service install
    dnscrypt-proxy -service start
    dnscrypt-proxy -resolve google.com


